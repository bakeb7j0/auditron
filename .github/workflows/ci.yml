name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  lint:
    name: Lint (ruff, flake8, pylint, pyright)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install ruff flake8 pylint
          # Prefer pyright's pip package with nodejs extra (bundles Node runtime)
          pip install "pyright[nodejs]" || pip install pyright

      - name: Ruff
        run: ruff check .

      - name: Flake8 (errors-only)
        run: flake8 --select=E9,F63,F7,F82 --show-source --statistics

      - name: Pylint (errors-only)
        run: |
          pylint -E auditron.py strategies utils scripts

      - name: Pyright
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pyright

  unit-tests:
    name: Unit tests (pytest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Run pytest (unit)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q -m "not integration" --maxfail=1 --disable-warnings

  integration:
    name: Integration tests (smoke + optional @integration)
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Prepare DB (fresh) and seed defaults
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          mkdir -p db
          rm -f db/auditron.db
          python scripts/seed_db.py --init-defaults

      - name: Orchestrator smoke run (no hosts)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python auditron.py --resume

      - name: Run pytest (marked integration) if present
        env:
          PYTHONPATH: ${{ github.workspace }}
        shell: bash
        run: |
          shopt -s nullglob
          files=(tests/integration/test_*.py)
          if [ ${#files[@]} -gt 0 ]; then
            pytest -q -m integration --maxfail=1 --disable-warnings
          else
            echo "No integration tests found; skipping."
          fi
