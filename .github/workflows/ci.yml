name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

env:
  PYTHONUTF8: "1"

jobs:
  lint:
    name: Lint (ruff, flake8, pylint, pyright)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements-dev.txt

      - name: Install dev toolchain
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Show versions
        run: |
          python -V
          ruff --version
          black --version
          isort --version-number
          flake8 --version
          pylint --version || true
          pyright --version || true
          pre-commit --version

      - name: Run pre-commit on all files
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pre-commit run --all-files

  unit-tests:
    name: Unit tests (pytest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: requirements-dev.txt

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Validate test structure
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python validate_tests.py

      - name: Run pytest (unit tests with coverage)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q -m "not integration" --maxfail=5 --cov=auditron --cov=utils --cov=strategies --cov-report=term --cov-fail-under=75

  integration:
    name: Integration tests (smoke + optional @integration)
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements-dev.txt

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Prepare DB (fresh) and seed defaults
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          mkdir -p db
          rm -f db/auditron.db
          python scripts/seed_db.py --init-defaults

      - name: Orchestrator smoke run (no hosts)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python auditron.py --resume

      - name: Run pytest (integration tests)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -v -m integration --maxfail=3 --tb=short tests/integration/

      - name: Generate coverage report
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest --cov=auditron --cov=utils --cov=strategies --cov-report=html --cov-report=term-missing -m "not integration" --quiet

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: matrix.python-version == '3.11'
        with:
          name: coverage-report
          path: htmlcov/
